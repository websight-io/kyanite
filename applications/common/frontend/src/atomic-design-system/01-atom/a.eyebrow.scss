/*!
 * <!--
 *     Copyright (C) 2023 Dynamic Solutions
 *
 *     Licensed under the Apache License, Version 2.0 (the "License");
 *     you may not use this file except in compliance with the License.
 *     You may obtain a copy of the License at
 *
 *         http://www.apache.org/licenses/LICENSE-2.0
 *
 *     Unless required by applicable law or agreed to in writing, software
 *     distributed under the License is distributed on an "AS IS" BASIS,
 *     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *     See the License for the specific language governing permissions and
 *     limitations under the License.
 * -->
 */

@use 'sass:map';

@use 'src/bulma-overwrite/bulma-spacing';
@use 'src/bulma-overwrite/variables' as spacing;

@use 'src/atomic-design-system/00-token/t.font' as font;
@use 'src/atomic-design-system/00-token/t.color' as color;
@use 'src/atomic-design-system/00-token/t.breakpoint' as breakpoint;

@mixin a-eyebrow {
  @extend .t-font-weight--600;
  @extend .t-color__primary--600;
  @extend .t-line-height--150;

  &.is-1 {
    @include font.t-font-size-fluid(22, 32);
  }

  + .title {
    &.is-1 {
      @extend .t-line-height--100;
      @extend .pt-4;
    }

    &.is-2 {
      @extend .pt-2;
    }

    &.is-3 {
      @extend .pt-2;
    }

    &.is-4 {
      @extend .pt-1;
    }

    &.is-5 {
      @extend .pt-1;
    }

    &.is-6 {
      @extend .pt-1;
    }
  }
  @include breakpoint.media-breakpoint-maximum {
    + .title {
      &.is-1 {
        padding-top: map.get(
          spacing.$spacing-values,
          '5_2'
        ) !important; // overwriting bulma class (above @extend)
      }

      &.is-2 {
        padding-top: map.get(
          spacing.$spacing-values,
          '4'
        ) !important; // overwriting bulma class (above @extend)
      }

      &.is-3 {
        padding-top: map.get(
          spacing.$spacing-values,
          '4'
        ) !important; // overwriting bulma class (above @extend)
      }

      &.is-4 {
        padding-top: map.get(
          spacing.$spacing-values,
          '2'
        ) !important; // overwriting bulma class (above @extend)
      }

      &.is-5 {
        padding-top: map.get(
          spacing.$spacing-values,
          '2'
        ) !important; // overwriting bulma class (above @extend)
      }

      &.is-6 {
        padding-top: map.get(
          spacing.$spacing-values,
          '2'
        ) !important; // overwriting bulma class (above @extend)
      }
    }
  }
}
