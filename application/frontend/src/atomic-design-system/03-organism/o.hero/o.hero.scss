/*!
 * <!--
 *     Copyright (C) 2023 Dynamic Solutions
 *
 *     Licensed under the Apache License, Version 2.0 (the "License");
 *     you may not use this file except in compliance with the License.
 *     You may obtain a copy of the License at
 *
 *         http://www.apache.org/licenses/LICENSE-2.0
 *
 *     Unless required by applicable law or agreed to in writing, software
 *     distributed under the License is distributed on an "AS IS" BASIS,
 *     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *     See the License for the specific language governing permissions and
 *     limitations under the License.
 * -->
 */

@use 'sass:map';

@use 'src/atomic-design-system/00-token/t.spacing';
@use 'src/atomic-design-system/00-token/t.breakpoint' as breakpoint;
@use 'src/bulma-overwrite/variables' as variables;
@use 'src/bulma-overwrite/bulma-spacing' as bulma-spacing;

@mixin o-hero {
  .hero-body {
    @extend .mx-0;

    // currently designs show only medium hero component
    // for now force the same horizontal padding like on medium hero component
    padding-left: map.get(variables.$spacing-values, '5') !important;
    padding-right: map.get(variables.$spacing-values, '5') !important;
    @include breakpoint.media-breakpoint-large {
      padding-left: map.get(variables.$spacing-values, '6') !important;
      padding-right: map.get(variables.$spacing-values, '6') !important;
    }

    display: flex;
    align-items: center;
    justify-content: center;

    .container {
      @include breakpoint.media-breakpoint-large {
        row-gap: map.get(variables.$spacing-values, '6_3');
      }

      *:not(.eyebrow) {
        @extend .my-0;
      }

      > *:not(.eyebrow, :last-child) {
        @extend .mb-6_2;
      }
    }
  }
}

@mixin o-hero-medium {
  .hero-body {
    padding-top: map.get(variables.$spacing-values, '6_3');
    padding-bottom: map.get(variables.$spacing-values, '6_3');

    @include breakpoint.media-breakpoint-large {
      padding-top: map.get(variables.$spacing-values, '8');
      padding-bottom: map.get(variables.$spacing-values, '8');
    }
  }
}
